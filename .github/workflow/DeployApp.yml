name: NuboxApp

on:  
  push:
    branches: 
    - dev-*
    - master
    paths:
    - 'Nubox/**'
    - '.github/workflows/DeployApp.yml'
jobs:   
  build-docker-image-and-deploy:
    name: Build Docker Image and Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x] 
    env: 
      project-name: Nubox
      working-directory: ./nuboxapp

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: sa-east-1
    
    - name: Sets env vars for Production
      id: stage
      run: |
          echo "DEPLOY_ENV=prod" >> $GITHUB_ENV
          echo "ENV=PROD" >> $GITHUB_ENV
      if: endsWith(github.ref, '/master')

    - name: Sets env vars for Staging
      run: |
          echo "DEPLOY_ENV=stg" >> $GITHUB_ENV
          echo "ENV=STG" >> $GITHUB_ENV
      if: endsWith(github.ref, '/master') == false

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      working-directory: ${{ env.working-directory }}
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.project-name }}-${{ env.DEPLOY_ENV }}
        IMAGE_TAG: ${{ github.sha }}
        LATEST: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        echo "::set-output name=image_tag::$IMAGE_TAG"
        
    - name: Deploy ECS Cluster Production
      id: ecs-cluster-prod
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      if: ${{ env.ENV == 'PROD'}}
      with:
        name: ${{ env.project-name }}-${{ env.DEPLOY_ENV }}
        template: .infra/stack.prod.yml
        no-fail-on-empty-changeset: 1
        parameter-overrides: >-
          Environment=${{ env.DEPLOY_ENV }},
          DeployEnv=${{ env.ENV }},
          StackName=${{ env.project-name }},
          ImageTag=${{ steps.build-image.outputs.image_tag }},

    - name: Deploy ECS Cluster Staging
      id: ecs-cluster-stg
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      if: ${{ env.ENV == 'STG'}}
      with:
        name: ${{ env.project-name }}-${{ env.DEPLOY_ENV }}
        template: .infra/stack.stg.yml
        no-fail-on-empty-changeset: 1
        parameter-overrides: >-
          Environment=${{ env.DEPLOY_ENV }},
          DeployEnv=${{ env.ENV }},
          StackName=${{ env.project-name }},